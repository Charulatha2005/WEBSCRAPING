from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
import requests
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import time
import json

def get_api_data_via_selenium():
    options = Options()
    options.add_argument("--headless")
    options.add_argument("--disable-gpu")
    options.add_argument("--window-size=1920,1080")
    service = Service()  

    driver = webdriver.Chrome(service=service, options=options)
    driver.get("https://coinmarketcap.com/")
    time.sleep(3)  

    
    api_url = 'https://api.coinmarketcap.com/data-api/v3/cryptocurrency/listing?start=1&limit=100&sortBy=market_cap&sortType=desc&convert=USD&cryptoType=all&tagType=all&audited=false'
    headers = {
        'User-Agent': driver.execute_script("return navigator.userAgent;"),
        'Accept': 'application/json',
    }

    driver.quit()

    print("Fetching data from CoinMarketCap API via Selenium...")
    try:
        response = requests.get(api_url, headers=headers)
        response.raise_for_status()
        json_data = response.json()
    except Exception as e:
        print(f"Error fetching API data: {e}")
        return None

    crypto_list = json_data.get('data', {}).get('cryptoCurrencyList', [])
    crypto_data = []
    for coin in crypto_list:
        quotes = coin.get('quotes', [])
        usd_quote = next((q for q in quotes if q.get('name') == 'USD'), {})
        crypto_data.append({
            'Name': coin.get('name'),
            'Symbol': coin.get('symbol'),
            'Price': usd_quote.get('price'),
            '24h % Change': usd_quote.get('percentChange24h'),
            'Market Cap': usd_quote.get('marketCap')
        })

    return pd.DataFrame(crypto_data)

def visualize_data(df):
    print("Generating visualizations...")
    sns.set_style("whitegrid")
    plt.figure(figsize=(15, 10))

    plt.subplot(2, 2, 1)
    top_10_mc = df.nlargest(10, 'Market Cap')
    sns.barplot(x='Market Cap', y='Name', data=top_10_mc, palette='viridis')
    plt.title('Top 10 Cryptocurrencies by Market Cap')

    plt.subplot(2, 2, 2)
    top_10_price = df.nlargest(10, 'Price')
    sns.barplot(x='Price', y='Name', data=top_10_price, palette='plasma')
    plt.title('Top 10 Cryptocurrencies by Price')

    plt.subplot(2, 2, 3)
    sns.histplot(df['24h % Change'].dropna(), bins=30, kde=True, color='skyblue')
    plt.title('Distribution of 24h Price Change (%)')

    plt.subplot(2, 2, 4)
    sns.scatterplot(x='Price', y='Market Cap', data=df, alpha=0.7)
    plt.title('Price vs. Market Cap')
    plt.xscale('log')
    plt.yscale('log')

    plt.tight_layout()
    plt.show()

if __name__ == "__main__":
    df = get_api_data_via_selenium()
    if df is not None and not df.empty:
        print("\n--- Data Sample ---")
        print(df.head())
        visualize_data(df)
    else:
        print("No data retrieved.")
